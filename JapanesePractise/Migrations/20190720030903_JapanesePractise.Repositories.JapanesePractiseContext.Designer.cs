// <auto-generated />
using JapanesePractise.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace JapanesePractise.Migrations
{
    [DbContext(typeof(JapanesePractiseContext))]
    [Migration("20190720030903_JapanesePractise.Repositories.JapanesePractiseContext")]
    partial class JapanesePractiseRepositoriesJapanesePractiseContext
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("JapanesePractise.Core.DomainModels.Word", b =>
                {
                    b.Property<int>("IdWord")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("English");

                    b.Property<string>("HiraganaKatakana");

                    b.Property<string>("Kanji");

                    b.Property<string>("Romanji");

                    b.HasKey("IdWord");

                    b.ToTable("Words");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Word");
                });

            modelBuilder.Entity("JapanesePractise.Core.DomainModels.Adjective", b =>
                {
                    b.HasBaseType("JapanesePractise.Core.DomainModels.Word");

                    b.Property<string>("Affirmative");

                    b.Property<string>("Negative");

                    b.ToTable("Adjective");

                    b.HasDiscriminator().HasValue("Adjective");
                });

            modelBuilder.Entity("JapanesePractise.Core.DomainModels.Adverb", b =>
                {
                    b.HasBaseType("JapanesePractise.Core.DomainModels.Word");


                    b.ToTable("Adverb");

                    b.HasDiscriminator().HasValue("Adverb");
                });

            modelBuilder.Entity("JapanesePractise.Core.DomainModels.Noun", b =>
                {
                    b.HasBaseType("JapanesePractise.Core.DomainModels.Word");

                    b.Property<bool>("CanBeLocation");

                    b.Property<bool>("CanBeSubject");

                    b.Property<bool>("CanBeTopic");

                    b.ToTable("Noun");

                    b.HasDiscriminator().HasValue("Noun");
                });

            modelBuilder.Entity("JapanesePractise.Core.DomainModels.Verb", b =>
                {
                    b.HasBaseType("JapanesePractise.Core.DomainModels.Word");

                    b.Property<string>("CasualFormAffirmative");

                    b.Property<string>("CasualFormNegative");

                    b.Property<string>("PoliteFormAffirmative");

                    b.Property<string>("PoliteFormNegative");

                    b.Property<string>("PoliteFormQuestionDo");

                    b.Property<string>("PoliteFormQuestionWill");

                    b.ToTable("Verb");

                    b.HasDiscriminator().HasValue("Verb");
                });
#pragma warning restore 612, 618
        }
    }
}
